{
   "issuer": "Servauto Ned. B.V.",
   "fields": {
      "amount": {
         "parser": "regex",
         "regex": [
            "TOTAAL.?\\s+.\\s+(\\d{1,3}[,]\\d{2})",
            "Bedrag\\s+(\\d{1,3}.\\d{2}) EUR",
            "(?i)Amex\\s+€.?\\s+(\\d{1,3}.\\d{2})"
         ],
         "type": "float"
      },
      "amount_untaxed": {
         "parser": "regex",
         "regex": [
            "21.?00\\s+.\\s+(\\d{1,3}.\\d{1,2})\\s+.+\\s+\\d{1,3}.\\d{1,2}",
            "9.?00\\s+.\\s+(\\d{1,3}.\\d{1,2})\\s+.+\\s+\\d{1,3}.\\d{1,2}"
         ],
         "type": "float",
         "group": "sum"
      },
      "amount_tax": {
         "parser": "regex",
         "regex": [
            "21.?00\\s+.\\s+\\d{1,3}.\\d{1,2}\\s+.\\s+(\\d{1,3}.\\d{1,2})",
            "9.?00\\s+.\\s+\\d{1,3}.\\d{1,2}\\s+.\\s+(\\d{1,3}.\\d{1,2})"
         ],
         "type": "float",
         "group": "sum"
      },
      "date": {
         "parser": "regex",
         "regex": [
            "(\\d{1,2}[.|-|\\/]\\d{2}[.|-|\\/]\\d{4})\\s",
            "(\\d{1,2}-\\d{2}-\\d{4})\\s+\\d{1,2}.\\d{2}.\\d{2}"
         ],
         "type": "date"
      },
      "invoice_number": "(\\d{1,2}[.|-]\\d{2}[.|-]\\d{4})\\s",
      "static_vat": "NL003588567B01",
      "payment_method": [
         "(AMEX)",
         "(VISA)",
         "(MCARD)",
         "(CONTANT)",
         "(KAS):\\s.\\s\\d+\\.\\d+"
      ]
   },
   "lines": {
      "start": "BEDRAG",
      "end": "TOTAAL\\s",
      "first_line": ".(?P<product>\\w+).?\\s+\\d\\s[E|€]\\s*\\d+.\\d{0,2}",
      "line": [
         "(?P<name>POMP.*) (?P<qty>\\d+.\\d{2})\\s.+\\s.\\s(?P<unitprice>\\d.\\d{2,3})",
         "(?i)Prijs\\s+[E|€] (?P<unitprice>\\d.\\d{2,3})\\s*[/]?(?P<uom>[l|ℓ|L])?"
      ],
      "types": {
         "qty": "float",
         "unitprice": "float"
      }
   },
   "keywords": [
      "(?i)TOTAL",
      "Servau",
      "€"
   ],
   "options": {
      "currency": "EUR",
      "languages": [
         "nl"
      ],
      "decimal_separator": ",",
      "replace": [
         [
            "é",
            "€"
         ],
         [
            "L.p.9.",
            "LPG"
         ],
         [
            "L.P.G.",
            "LPG"
         ],
         [
            "L.P.9.",
            "LPG"
         ],
         [
            "L.P.\\s",
            "LPG"
         ],
         [
            "LPLG",
            "LPG"
         ],
         [
            "Contant",
            "CONTANT"
         ],
         [
            "\\s[l|&|@]",
            " ℓ"
         ],
         [
            "B.W",
            "BTW"
         ],
         [
            ", ",
            ","
         ],
         [
            "°",
            " "
         ],
         [
            "©",
            " "
         ],
         [
            "€ ([0-9]+) ([0-9]{2})(\\s)",
            "€ \\1,\\2\\3"
         ],
         [
            "(\\s)([0-9]+)\\.([0-9]{2})(\\s)",
            "\\1\\2,\\3\\4"
         ]
      ]
   }
}