# SPDX-License-Identifier: MIT
issuer: Kuwait Petroleum Ned. B.V.
tables:
  - start: Tango
    end: \s+KLANTENBON
    body: '(?P<telephone>\d{3}.\d{7})'
fields:
  amount: TOTAAL\s+€\s+(\d{1,3}.\d{2})
  amount_untaxed: Netto\s+€\s+(\d{1,3}.\d{2})
  date:
    parser: regex
    regex:
      - Datum\s+(\d{1,2}-\d{2}-\d{4}\s+\d{2}[:]\d{2}[:]\d{2})
      - Datum\s+(\d{1,2}-\d{2}-\d{4})
    type: date
    # group: max
  invoice_number: Ticketnummer\s+(\d+)
  vat:
    parser: regex
    regex: (NL\d{9}B\d{2})\s
  partner_website:
    parser: static
    value: tango.nl
  country_code:
    parser: static
    value: nl
lines:
    start: Datum
    end: code
    line:
      - Pomp\s+\S+\s+(?P<code>(\S+(?:\s*\S+){2}))\s+\w+\s{14,30}(?P<qty>\d+[.,]\d{2})\s\S+\s+\w+\s+.*\s(?P<price_unit>\d.\d{3})[\/](?P<uom>\w)\s+\w+\s+.\s+(?P<unused>\d{2}.\d{2})\s+.\s+\S*\s+(?P<line_tax_percent>\d+.\d{2})\s+.\s+\S\s+(?P<line_tax_amount>\d{1,2}.\d{2})
    types:
      qty: float
      price_unit: float
      line_tax_percent: float
      line_tax_amount: float
keywords:
  - Kuwait
  - tango
  - €
exclude_keywords:
  - (?i)Liberty.card
options:
  currency: EUR
  languages:
    - nl
  decimal_separator: ','
  replace:
    - ['é' ,'€']
    - ['L.p.9.' ,'LPG']
    - ['L.P.G.' ,'LPG']
    - ['L.P.9.' ,'LPG']
    - ['LPLG' ,'LPG']
    - ['Contant' ,'CONTANT']
    - ['\s[l|&|@]' ,' ℓ']
    - ['B.W', 'BTW']
    - [' - ', '-']
    - ['\n', ' '] # replace line break
    - ['\s+DIESEL\s+', ' B7 (Diesel) ']
    - ['NL\s+(\d{9})\s', ' NL\1B01 '] # Fixup vat
    - ['[,.](?P<price_unit_decimal>\d{3})[\/]\w', ',\g<price_unit_decimal>/L']  # Fixup UOM
    - ['(\s)([0-9]+)\.([0-9]{2})(\s)', '\1\2,\3\4'] # workaround for ocr inconsistancy on comma and dot detection
# todo reformat the Euro 95 and 98 products
# need more receipts for that
#    - ['Euro 95 E10' ,'E10 (Euro 95)']
