# SPDX-License-Identifier: MIT
issuer: EG Retail (Belgium) BVBA
fields:
  amount:
    parser: regex
    regex:
      - (?i)TOTAAL\s+€?.?\s+(\d+.\d{2})
      - (?i)Amex\s+€.?\s+(\d{1,3}.\d{2})
    type: float
  amount_untaxed:
    parser: regex
    regex:
      - \d{2}.\d{2}\s+. (\d+.\d{2})\s+. \d+.\d{2}
    type: float
    group: sum
  date:
    parser: regex
    regex: (\d{1,2}-\d{2}-\d{4}\s+\d{1,2}.\d{2}.\d{2})
    type: date
  invoice_number:
    parser: regex
    regex: (\d{1,2}-\d{2}-\d{4})\s+\d{1,2}.\d{2}.\d{2}
  static_vat: BE04060843239
  partner_name:
    parser: static
    value:  EG Retail (Belgium) BVBA
  partner_city:
    parser: static
    value: Antwerpen
  country_code:
    parser: static
    value: be
  payment_method:
    - (?i)(AMEX)
    - (VISA)
    - (MCARD)
    - (CONTANT)
    - (KAS):\s.\s\d+\.\d+
lines:
# code is correct, but we need to support multiple line blocks
    start: BTW type
    end: (\d{1,2}-\d{2}-\d{4})\s+\d{2}.\d{2}.\d{2}
    line: (?P<btwtype>\d).?\s+(?P<line_tax_percent>\d{2}.\d{2})\s+.\s+(?P<amount_untaxed>\d+.\d{2})\s+. (?P<line_tax_amount>\d+.\d{2})
# code below works, but without product
    start: BEDRAG
    end: (\d{1,2}-\d{2}-\d{4}\s+\d{1,2}.\d{2}.\d{2}) # TOTAAL\s
    line: (?P<name>POMP.*).?\s(?P<qty>\d+.\d{2})\s+.?.?\s+€?\s+(?P<unit_price>\d.\d{3}).(?P<uom>.)[)]
    first_line: '\s(?P<code>(\w+\s(?:\s?\S+){2}))\s+.\s+[E|€]\s*\d+.\d{0,2}' 
    types:
      qty: float
      line_tax_percent: float
      unit_price: float
      line_tax_amount: float
keywords:
  - BE.406
  - (?i)EG Retail
options:
  currency: EUR
  languages:
    - nl
  decimal_separator: ','
  date_formats:
    - '%m-%d-%Y hh:mm'
  remove_accents:
  #  - True
# Using replace to correct tesseract ocr
# in Odoo use the following product names 'LPG','E10 (Euro 95)'
  replace:
    - ['L.p.9.' ,'LPG']
    - ['L.P.G.' ,'LPG']
    - ['L.P.9.' ,'LPG']
    - ['L.P.\s' ,'LPG']
    - ['Euro95 E..XL' ,'E10 (Euro 95)']
    - ['LPLG' ,'LPG']
    - ['Contant' ,'CONTANT']
    - ['B.W', 'BTW']
    - [', ', ',']
    - ['°', ' ']
    - ['©', ' ']
    - ['«', ' ']
    - ['(?P<price_ltr>\d{3}.).[)]', '\g<price_ltr>L)']
    - ['(?P<number>\d+)[.](?P<decimal_number>\d{1,2})', '\g<number>,\g<decimal_number>']
    # Tesseract mixup . and , signs
    # These scanned invoices typically dont have thousand numbers.
    # so converting decimal sign makes sense.
    - ['(\s)([0-9]+)\.([0-9]{2})(\s)', '\1\2,\3\4'] 
    # workaround for ocr inconsistancy on comma and dot detection
